# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Ticket(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Ticket()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTicket(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Ticket
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Ticket
    def WrbId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def TicketStart(builder):
    builder.StartObject(1)

def Start(builder):
    TicketStart(builder)

def TicketAddWrbId(builder, wrbId):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(wrbId), 0)

def AddWrbId(builder, wrbId):
    TicketAddWrbId(builder, wrbId)

def TicketEnd(builder):
    return builder.EndObject()

def End(builder):
    return TicketEnd(builder)
